let Koa,bodyParser,Router,mongoose,api,jwtMiddleware;_4b1‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_4b1‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_4b1‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_4b1‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_4b1‍.w("./api",[["default",["api"],function(v){api=v}]]);_4b1‍.w("../src/lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);/* 메인 커맨드 센터 사령부 */
require('dotenv').config();






// 포트 번호 저장하기 
// eslint-disable-next-line no-undef
const {PORT, MONGO_URI} = process.env;


// api 모둠 가져와서



mongoose.connect(MONGO_URI, {useNewUrlParser: true}).then(() => {
    console.log('Connected to MongoDB');     
})
.catch(e => {
    _4b1‍.g.console.error(e);
});
 
const app = new Koa();
const router = new Router();

// api 모둠의 라우터 메인 커멘드 센터에 적용하기
router.use('/api', api.routes());

// 라우터를 적용하기 전에 bodyParser를 적용 (json 타입으로 변환해야 하기 때무네!)
app.use(bodyParser());
app.use(jwtMiddleware);

// app 인스턴스에 라우터 적용하기
app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, () => {
    _4b1‍.g.console.log('%d번 포트 접속 중', port);
});
